**********************************************************************
*INICIO
**********************************************************************
TP       SUBENTRY BASES=(3,4)
         B     CANTEST *INGRESAR TOTAL DE ESTACIONES
MENU	 WTO   '--------------      MENU     --------------'
         WTO   '1) INGRESAR TRAMO'
         WTO   '2) VER LINEAS'
         WTO   '3) VER CANTIDAD DE ESTACIONES'
         WTO   '4) SALIR'
         WTO   '5) MUESTRO MATRIZ'
         WTO   '-------------------------------------------'
M_OPC    WTOR  'SELECCIONAR OPCION [1-4]',OPCION,,WAITECB
		 WAIT  ECB=WAITECB 
         CLI   OPCION,C'1'
		 BE    TRAMO *INGRESAR TRAMO
		 CLI   OPCION,C'2'
		 BE    LINEAS *VER LINEAS
		 CLI   OPCION,C'3'
		 BE    VEREST *VER ESTACIONES
		 CLI   OPCION,C'4'
		 BE    FIN
		 CLI   OPCION,C'5'
		 BE    MOSTRARM
		 WTO   'OPCION NO VALIDA'
		 B     MENU
FIN      WTO   '=========>    FIN    <========='  
         SUBEXIT
         
**********************************************************************
* INICIAR VECTOR CON NUMERO DE LINEAS Y SI SE MOSTRO LA ESTACION
* VUELVO CON R5
* USO R6 PARA LA DIRECCION Y R7 PARA CICLAR
**********************************************************************
INI_VNL  LA    7,V_NUMLIN
         LA    6,20
         ZAP   CONT_LIN,=P'1'
OTRALIN  UNPK  NUM_LINC,CONT_LIN
         MVZ   NUM_LINC+1(1),=X'FF'
         MVC   NUMVEST,NUM_LINC
         MVC   NUMLIN,=C'00'
         MVC   VISTO,=C'0'
         MVC   0(5,7),VECREG
         LA    7,5(7)
         AP    CONT_LIN,=P'1'
         BCT   6,OTRALIN
         MVC   0(5,7),=C'21000'
         BR    5

**********************************************************************
*CANTIDAD DE ESTACIONES
*USO R5 PARA LLAMAR A LAS RUTINAS DE VALIDACION DE NUMERO Y RANGO
**********************************************************************
CANTEST  WTOR  'Ingrese la cantidad de estaciones(1-20):',CANT,,WAITECB
         WAIT  ECB=WAITECB
         BAL   5,VALEST *VERIFICO SI LOS DOS CHAR SON NUMEROS
         BAL   5,RANGO *VALOR EN RANGO
         B     MENU

**********************************************************************
* VALIDO CANTIDAD DE ESTACIONES
* VUELVO CON R5
* USO R6 PARA LA VALIDACION
**********************************************************************
VALEST   LA    6,CANT
         CLC   0(1,6),=C'0'
         BL    NVALID1
         CLC   0(1,6),=C'9'
         BH    NVALID1
         CLC   1(1,6),=C'0'
         BL    NVALID2
         CLC   1(1,6),=C'9'
         BH    NVALID2
DOPAK    PACK  CANTPAK,0(2,6)
VALBK    BR    5
         
NVALID1  WTO   'NUMERO NO VALIDO'
         B     CANTEST
NVALID2  MVC   1(1,6),0(6)
         MVI   0(6),C'0'
         B     DOPAK

***********************************************************************
*        VERIFICO SI EL RANGO ES EL CORRECTO
*        VUELVO CON R5
***********************************************************************  
RANGO    CP    CANTPAK,MAXEST
         BH    NRANGO
         CP    CANTPAK,MINEST
         BL    NRANGO
         BR    5

NRANGO   MVC   VAL_MSG+44(2),MAXESTC
         WTO   MF=(E,VAL_MSG-4)
         B     CANTEST

**********************************************************************
*        INGRESAR TRAMOS
*        USO R6 Y R7
**********************************************************************
TRAMO    WTOR  'INGRESE INICIO DEL TRAMO',TRAM_XYC,,WAITECB
         WAIT  ECB=WAITECB
         BAL   6,VALTRAMO
         CLI   RES_TRC,C'F'
         BE    TRAMO
         MVC   VAL_X,TRAM_XYC
FIN_TRAM WTOR  'INGRESE FIN DEL TRAMO',TRAM_XYC,,WAITECB
         WAIT  ECB=WAITECB
         BAL   6,VALTRAMO
         CLI   RES_TRC,C'F'
         BE    FIN_TRAM
         PACK  DOBLE,TRAM_XYC
         MVC   VAL_Y,TRAM_XYC
*        CARGO EN LA MATRIZ CON POS (X,Y)
         ZAP   LONGFILP,=P'20'
         ZAP   LONGCOLP,=P'1'
         BAL   7,MARKMAT
*        CARGO EN LA MATRIZ CON POS (Y,X) PARA LA PARTE INVERTIDA
         ZAP   LONGFILP,=P'1'
         ZAP   LONGCOLP,=P'20'
         BAL   7,MARKMAT
         B     MENU
         
**********************************************************************
* SUBRUTINA DE VALIDACION
* VUELVO CON R6 Y USO R5 PARA LAS OTRAS RUTINAS
**********************************************************************
VALTRAMO BAL   5,VALTRNUM
         CLI   RES_TRC,C'F'
         BE    VALTRFIN
         PACK  DOBLE,TRAM_XYC
         BAL   5,VALRANGT
VALTRFIN BR    6

**********************************************************************
* VALIDO EL TRAMO INICIAL O FINAL
* VUELVO CON R5
* USO R7 PARA LA VALIDACION
**********************************************************************
VALTRNUM LA    7,TRAM_XYC
         CLC   0(1,7),=C'0'
         BL    NVALTR1
         CLC   0(1,7),=C'9'
         BH    NVALTR1
         CLC   1(1,7),=C'0'
         BL    NVALTR2
         CLC   1(1,7),=C'9'
         BH    NVALTR2
         MVI   RES_TRC,C'T'
VAL_TRBK BR    5
         
NVALTR1  WTO   'NUMERO NO VALIDO'
         MVI   RES_TRC,C'F'
         B     VAL_TRBK
NVALTR2  MVC   1(1,7),0(7)
         MVI   0(7),C'0'
         MVI   RES_TRC,C'T'
         B     VAL_TRBK

**********************************************************************
* VALIDO EL RANGO DEL TRAMO
* VUELVO CON R5
**********************************************************************
VALRANGT CP    DOBLE,CANTPAK
         BH    NOVAL_R
         CP    DOBLE,MINEST
         BL    NOVAL_R
         MVI   RES_TRC,C'T'
FINVALR  BR    5

NOVAL_R  MVC   VAL_MSG+44(2),CANT
         WTO   MF=(E,VAL_MSG-4)
         MVI   RES_TRC,C'F'
         B     FINVALR

**********************************************************************
* MARCO 1 EN LA MATRIZ EN LAS POSICIONES INDICADAS POR VAL_X Y VAL_Y
* USO LAS LONGFILP Y LONGCOLP PARA SABER CUANTOS BYTES ME MUEVO
* VUELVO CON R7
* USO LOS R5 Y R6 PARA LOS CALCULOS 
**********************************************************************
MARKMAT  LA    6,MAT
*        ME MUEVO HASTA LA FILA
         PACK  DOBLE,VAL_X
         SP    DOBLE,=P'1'
         MP    DOBLE,LONGFILP
         CVB   5,DOBLE
         AR    6,5
*        ME MUEVO HASTA LA COLUMNA
         PACK  DOBLE,VAL_Y
         SP    DOBLE,=P'1'
         MP    DOBLE,LONGCOLP
         CVB   5,DOBLE
         AR    6,5
         MVC   0(1,6),=C'1'
         BR    7
         
**********************************************************************
*        MUESTRO LINEAS   
**********************************************************************
LINEAS   BAL   5,INI_VNL
         B     FILL_VEC

**********************************************************************
*        RECORRO LA MATRIZ Y ARMO EL VECTOR DE REGISTROS
**********************************************************************
FILL_VEC LA    5,MAT
         LA    7,V_NUMLIN
         LA    8,V_NUMLIN
         LA    6,20
         ZAP   CONT_LIN,=P'1'
         ZAP   CONT_MAT,=P'0'
SIG_COLM AP    CONT_MAT,=P'1' * SUMO UNO AL CONTADOR POR COLUMNAS
         CLC   2(2,7),=C'00' * SI ES CERO CARGO UN NUEVO VALOR DE LINEA
         BE    FILL_LIN
SIG_EL_M CLI   0(5),C'1' * SI EN LA MATRIZ VALE 1 LLAMO A UPD_LIN
         BE    UPD_LIN
         LA    5,1(5) * AVANZO EN LA MATRIZ
         LA    8,5(8) * AVANZO EN EL VECTOR AUX PARA UPD_LIN
         CP    CONT_MAT,=P'20'
         BL    SIG_EL_M * SI NO LLEGUE A LOS 21 SIGO POR LA MISA FILA
BACK_UPD ZAP   CONT_MAT,=P'0'
         AP    CONT_LIN,=P'1'
         LA    8,V_NUMLIN * INICIO EL VECTOR AUX
         LA    7,5(7) * AVANZO EN EL VECTOR DE LINEAS
         BCT   6,SIG_COLM * HAGO ESTO 20 VECES
         B     R_LINEA

FILL_LIN UNPK  NUM_LINC,CONT_LIN
         MVZ   NUM_LINC+1(1),=X'FF'
         MVC   2(2,7),NUM_LINC
         B     SIG_EL_M

UPD_LIN  CLC   2(2,8),=C'00' * SI ES 00 LE PONGO EL VALOR DE LINEA
         BE    UPD_EQ
         CLC   2(2,8),2(7) * SI SON IGUALES NO HAGO NADA
         BE    UPD_FIN
*        SI SON DISTINTOS TENGO QUE RECORRER EL VECTOR Y ACTUALIZAR
         ZAP   AUX_VEC,=P'0'
         LA    9,V_NUMLIN
UPD_OTRO AP    AUX_VEC,=P'1'
         CLC   2(2,8),2(9) * SI LO QUE ESTA EN AUX ES IGUAL A
         BNE   UPD_SIG
         MVC   2(2,9),2(7)
UPD_SIG  LA    9,5(9)
         CP    AUX_VEC,=P'20'
         BL    UPD_OTRO
UPD_FIN  B     BACK_UPD

UPD_EQ   MVC   2(2,8),2(7)
         B     UPD_FIN

**********************************************************************
*RECORRO EL VECTOR Y POR CADA ELEMENTO NO VISTO EJECUTO S_LINEA
**********************************************************************
R_LINEA  LA    5,V_NUMLIN * ME GUARDO EL VECTOR
*         LA    7,20 *20 VUELTAS SI ALGUNA ES 00 TERMINE 
         ZAP   AUX_VEC,=P'0'
         ZAP   CONT_LIN,=P'1' * CONTADOR DE LINEAS
O_REGIS  CLC   2(2,5),=C'00'
         BE    MENU
         LA    6,L_LISTA * LISTA PARA IR AGREGANDO LAS ESTACIONES
         MVC   VECREG,0(5) * GUARDO EL ELEMENTO EN VECREG
         CLI   VISTO,C'1'
         BE    N_REGIS
         B     S_LINEA
N_REGIS  LA    5,5(5)
*         BCT   7,O_REGIS
         CP    AUX_VEC,CANTPAK
         BL    O_REGIS
         B     MENU

**********************************************************************
*        RECORRO EL VECTOR Y MUESTRO LAS LINEAS DE UN ELEMENTO  
**********************************************************************
S_LINEA  LR    8,5
         MVC   L_LISTA(30),=C'                              '
         MVC   L_LISTA+30(30),=C'                              '
OTRO_REC CLC   2(2,8),=C'00'
         BE    MUESTROL *SI ES 00 TERMINO DE RECORRER
         CLC   2(2,8),NUMLIN * SI ES IGUAL A LA LINEA ANTERIOR
         BNE   SIG_RECL
         MVC   4(1,8),=C'1' * MARCO EL VISTO
         MVC   0(1,6),=C','
         MVC   1(2,6),0(8) * MUEVO EL NUM DE ESTACION
         LA    6,3(6) * ADELANTO LA LINEA DONDE CARGO
SIG_RECL LA    8,5(8)
         AP    AUX_VEC,=P'1'
         CP    AUX_VEC,CANTPAK
         BE    MUESTROL
         B     OTRO_REC
         
MUESTROL UNPK  NUM_LINC,CONT_LIN * CARGO NUMERO DE LINEA
         MVZ   NUM_LINC+1(1),=X'FF'
         MVC   L_SHOW+6(2),NUM_LINC * ARMO EL STRING PARA MOSTRAR
         MVC   L_SHOW+10(59),L_LISTA+1
         WTO   MF=(E,L_SHOW-4)
         AP    CONT_LIN,=P'1' * SUMO UNO AL CONTADOR DE LINEAS
*        REINICIAR L_LINEA
         MVC   L_LISTA(30),=C'                              '
         MVC   L_LISTA+30(30),=C'                              '
         B     N_REGIS

**********************************************************************
*        MUESTRO CANTIDAD DE ESTACIONES   
**********************************************************************
VEREST   MVC   TOTESTA+21(2),CANT
         WTO   MF=(E,TOTESTA-4)
         B     MENU

**********************************************************************
*        MUESTRO MATRIZ
**********************************************************************
MOSTRARM WTO   '-------------------------------------------'
         LA    6,20
         LA    5,MAT
ELEMSIG  MVC   ELEM(20),0(5)
         WTO   MF=(E,ELEM-4)
         LA    5,20(5)
         BCT   6,ELEMSIG
         WTO   '-------------------------------------------'
         B     MENU
         
**********************************************************************
*        DEFINICION DE VARIABLES
**********************************************************************
* MAXIMO Y MINIMO DE LAS ESTACIONES
MAXESTC  DC    C'20'
MAXEST   DC    PL2'20'
MINEST   DC    PL2'1'

*CANTIDAD DE ESTACIONES EN CHAR Y EMPAQUETADO
CANT     DS    CL2
CANTPAK  DS    PL2

*PARA LAS OPCIONES DEL MENU
OPCION   DS    CL1

*VECTOR DONDE ALMACENO LA LINEA A LA HORA DE MOSTRARLA
*VECTOR DONDE GUARDO SI PASE POR ESA LINEA
V_NUMLIN DS    21CL5

*MATRIZ DONDE GUARDO LAS RELACIONES DE LAS ESTACIONES
MAT      DC    400CL1'0'

*PARA CONVERTIR EN EMPAQUETADO
DOBLE    DS    FD

*PARA INGRESAR LOS TRAMOS ESTACION INICIAL Y FINAL
VAL_X    DS    CL2
VAL_Y    DS    CL2

*VALORES PARA IR MOVIENDOME EN LA MATRIZ
LONGFILP DS    PL2
LONGCOLP DS    PL2

*VALOR DEL TRAMO PARA VALIDAR
TRAM_XYC DS    CL2

*RESULTADO DE LA VALIDACION DE TRAMO
RES_TRC  DS    CL1

*MENSAJE DE VALIDACION
         DC    H'50'
         DC    H'0'
VAL_MSG  DC    C'EL VALOR INGRESADO ESTA FUERA DEL RANGO 1 A 20'

*PARA IMPRIMIR EL TOTAL DE ESTACIONES
         DC    H'29'
         DC    H'0'
TOTESTA  DC    CL25'TOTAL DE ESTACIONES: '

*PARA EL WTOR
WAITECB  DC    F'0'

* REGISTRO PARA USAR EN EL VECTOR
VECREG   DS    0CL5
NUMVEST  DS    CL2
NUMLIN   DS    CL2
VISTO    DS    CL1

* VARIABLES PARA RECORRER MATRIZ Y ARMAR EL VECTOR
CONT_MAT DS    PL2
AUX_VEC  DS    PL2

*VARIABLES PARA RECORRER EL VECTOR DE LINEAS
CONT_LIN DS    PL2

L_LISTA  DS    CL60

         DC    H'73'
         DC    H'0'
L_SHOW   DC    CL69'LINEA NN: '

NUM_LINC DS    CL2

*SOLO PARA MOSTRAR MATRIZ
VAL      DS    PL1

         DC    H'24'
         DC    H'0'
ELEM     DS    CL20

         END